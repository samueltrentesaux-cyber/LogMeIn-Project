name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: your-org/your-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Run tests with Docker Compose
        run: |
          docker-compose up -d
          docker-compose exec -T app pytest
          docker-compose down

  scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.11.2
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: 'table'

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy with Ansible
        run: |
          ansible-playbook -i inventories/staging deploy.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
